<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="22" total="171" passed="149">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2185899" started-at="2017-05-11T08:43:14Z" finished-at="2017-05-11T09:19:40Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2185899" started-at="2017-05-11T08:43:14Z" finished-at="2017-05-11T09:19:40Z">
      <class name="analyticsLive.GARun">
        <test-method status="PASS" signature="Browserinvoke()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="Browserinvoke" is-config="true" duration-ms="27631" started-at="2017-05-11T14:13:14Z" finished-at="2017-05-11T14:13:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Browserinvoke -->
        <test-method status="PASS" signature="dshboardView()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dshboardView" duration-ms="41742" started-at="2017-05-11T14:13:42Z" finished-at="2017-05-11T14:14:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dshboardView -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="278" started-at="2017-05-11T14:14:24Z" finished-at="2017-05-11T14:14:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dshboardView status=SUCCESS method=GARun.dshboardView()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_storename_dropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_storename_dropdown" duration-ms="338" started-at="2017-05-11T14:14:24Z" finished-at="2017-05-11T14:14:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_storename_dropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="48" started-at="2017-05-11T14:14:24Z" finished-at="2017-05-11T14:14:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_storename_dropdown status=SUCCESS method=GARun.L1_storename_dropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_storelist_dropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_storelist_dropdown" duration-ms="435" started-at="2017-05-11T14:14:24Z" finished-at="2017-05-11T14:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_storelist_dropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="47" started-at="2017-05-11T14:14:25Z" finished-at="2017-05-11T14:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_storelist_dropdown status=SUCCESS method=GARun.L1_storelist_dropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_buttonQuaterApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_buttonQuaterApply" duration-ms="24512" started-at="2017-05-11T14:14:25Z" finished-at="2017-05-11T14:14:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_buttonQuaterApply -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:14:49Z" finished-at="2017-05-11T14:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_buttonQuaterApply status=SUCCESS method=GARun.L1_buttonQuaterApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_buttonPeriodApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_buttonPeriodApply" duration-ms="25263" started-at="2017-05-11T14:14:49Z" finished-at="2017-05-11T14:15:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_buttonPeriodApply -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:15:15Z" finished-at="2017-05-11T14:15:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_buttonPeriodApply status=SUCCESS method=GARun.L1_buttonPeriodApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_buttonYearApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_buttonYearApply" duration-ms="2442" started-at="2017-05-11T14:15:15Z" finished-at="2017-05-11T14:15:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_buttonYearApply -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:15:17Z" finished-at="2017-05-11T14:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_buttonYearApply status=SUCCESS method=GARun.L1_buttonYearApply()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkboxClick()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkboxClick" duration-ms="8317" started-at="2017-05-11T14:15:17Z" finished-at="2017-05-11T14:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkboxClick -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:15:25Z" finished-at="2017-05-11T14:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkboxClick status=SUCCESS method=GARun.checkboxClick()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_dateStartend()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_dateStartend" duration-ms="47" started-at="2017-05-11T14:15:25Z" finished-at="2017-05-11T14:15:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_dateStartend -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:15:26Z" finished-at="2017-05-11T14:15:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_dateStartend status=SUCCESS method=GARun.L1_dateStartend()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_netSalesNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_netSalesNavigator" duration-ms="29142" started-at="2017-05-11T14:15:26Z" finished-at="2017-05-11T14:15:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_netSalesNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="49" started-at="2017-05-11T14:15:55Z" finished-at="2017-05-11T14:15:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_netSalesNavigator status=SUCCESS method=GARun.L2_netSalesNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netSalesStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netSalesStoreNameDropdown1" duration-ms="300" started-at="2017-05-11T14:15:55Z" finished-at="2017-05-11T14:15:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netSalesStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:15:55Z" finished-at="2017-05-11T14:15:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netSalesStoreNameDropdown1 status=SUCCESS method=GARun.netSalesStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netSalesStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netSalesStoreListDropdown2" duration-ms="385" started-at="2017-05-11T14:15:55Z" finished-at="2017-05-11T14:15:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netSalesStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:15:55Z" finished-at="2017-05-11T14:15:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netSalesStoreListDropdown2 status=SUCCESS method=GARun.netSalesStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netSalesQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netSalesQuarterDropdown" duration-ms="23052" started-at="2017-05-11T14:15:56Z" finished-at="2017-05-11T14:16:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netSalesQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="44" started-at="2017-05-11T14:16:19Z" finished-at="2017-05-11T14:16:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netSalesQuarterDropdown status=SUCCESS method=GARun.netSalesQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netSalesPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netSalesPeriodDropdown" duration-ms="23500" started-at="2017-05-11T14:16:19Z" finished-at="2017-05-11T14:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netSalesPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:16:42Z" finished-at="2017-05-11T14:16:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netSalesPeriodDropdown status=SUCCESS method=GARun.netSalesPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="netSalesFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netSalesFilterDataCheck" duration-ms="10435" started-at="2017-05-11T14:16:42Z" finished-at="2017-05-11T14:16:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.netSalesFilterDataCheck(GARun.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netSalesFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="42" started-at="2017-05-11T14:16:53Z" finished-at="2017-05-11T14:16:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netSalesFilterDataCheck status=FAILURE method=GARun.netSalesFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netsalesOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netsalesOverTime" duration-ms="18333" started-at="2017-05-11T14:16:53Z" finished-at="2017-05-11T14:17:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netsalesOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="60" started-at="2017-05-11T14:17:11Z" finished-at="2017-05-11T14:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netsalesOverTime status=SUCCESS method=GARun.netsalesOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsOTFilerCheck" duration-ms="17676" started-at="2017-05-11T14:17:11Z" finished-at="2017-05-11T14:17:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="60" started-at="2017-05-11T14:17:29Z" finished-at="2017-05-11T14:17:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsOTFilerCheck status=SUCCESS method=GARun.nsOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsGetFilter2Type()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsGetFilter2Type" duration-ms="20092" started-at="2017-05-11T14:17:29Z" finished-at="2017-05-11T14:17:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsGetFilter2Type -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:17:49Z" finished-at="2017-05-11T14:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsGetFilter2Type status=SUCCESS method=GARun.nsGetFilter2Type()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsOTBack" duration-ms="8304" started-at="2017-05-11T14:17:49Z" finished-at="2017-05-11T14:17:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:17:57Z" finished-at="2017-05-11T14:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsOTBack status=SUCCESS method=GARun.nsOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netsalesDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netsalesDayPart" duration-ms="4773" started-at="2017-05-11T14:17:57Z" finished-at="2017-05-11T14:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netsalesDayPart -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="149" started-at="2017-05-11T14:18:02Z" finished-at="2017-05-11T14:18:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netsalesDayPart status=SUCCESS method=GARun.netsalesDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="nsDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsDPFilerCheck" duration-ms="9926" started-at="2017-05-11T14:18:02Z" finished-at="2017-05-11T14:18:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.nsDPFilerCheck(GARun.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsDPFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:18:12Z" finished-at="2017-05-11T14:18:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsDPFilerCheck status=FAILURE method=GARun.nsDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsDPBack" duration-ms="8250" started-at="2017-05-11T14:18:12Z" finished-at="2017-05-11T14:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="84" started-at="2017-05-11T14:18:20Z" finished-at="2017-05-11T14:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsDPBack status=SUCCESS method=GARun.nsDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netsalesOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netsalesOrderMode" duration-ms="4732" started-at="2017-05-11T14:18:20Z" finished-at="2017-05-11T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netsalesOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="128" started-at="2017-05-11T14:18:25Z" finished-at="2017-05-11T14:18:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netsalesOrderMode status=SUCCESS method=GARun.netsalesOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="nsOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsOMFilerCheck" duration-ms="9749" started-at="2017-05-11T14:18:25Z" finished-at="2017-05-11T14:18:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.nsOMFilerCheck(GARun.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="43" started-at="2017-05-11T14:18:35Z" finished-at="2017-05-11T14:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsOMFilerCheck status=FAILURE method=GARun.nsOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsOMBack" duration-ms="8245" started-at="2017-05-11T14:18:35Z" finished-at="2017-05-11T14:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="53" started-at="2017-05-11T14:18:43Z" finished-at="2017-05-11T14:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsOMBack status=SUCCESS method=GARun.nsOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netsalesDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netsalesDayOfWeek" duration-ms="4673" started-at="2017-05-11T14:18:43Z" finished-at="2017-05-11T14:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netsalesDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="119" started-at="2017-05-11T14:18:48Z" finished-at="2017-05-11T14:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netsalesDayOfWeek status=SUCCESS method=GARun.netsalesDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="nsDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsDWFilerCheck" duration-ms="9831" started-at="2017-05-11T14:18:48Z" finished-at="2017-05-11T14:18:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.nsDWFilerCheck(GARun.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:18:58Z" finished-at="2017-05-11T14:18:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsDWFilerCheck status=FAILURE method=GARun.nsDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="nsDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="nsDWBack" duration-ms="8235" started-at="2017-05-11T14:18:58Z" finished-at="2017-05-11T14:19:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nsDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:19:06Z" finished-at="2017-05-11T14:19:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nsDWBack status=SUCCESS method=GARun.nsDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="netsalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="netsalesBack" duration-ms="28361" started-at="2017-05-11T14:19:06Z" finished-at="2017-05-11T14:19:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- netsalesBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:19:35Z" finished-at="2017-05-11T14:19:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=netsalesBack status=SUCCESS method=GARun.netsalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_checkAverageNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_checkAverageNavigator" duration-ms="102243" started-at="2017-05-11T14:19:35Z" finished-at="2017-05-11T14:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_checkAverageNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:21:17Z" finished-at="2017-05-11T14:21:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_checkAverageNavigator status=SUCCESS method=GARun.L2_checkAverageNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageStoreNameDropdown1" duration-ms="287" started-at="2017-05-11T14:21:17Z" finished-at="2017-05-11T14:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="12" started-at="2017-05-11T14:21:17Z" finished-at="2017-05-11T14:21:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageStoreNameDropdown1 status=SUCCESS method=GARun.checkAverageStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageStoreListDropdown2" duration-ms="270" started-at="2017-05-11T14:21:17Z" finished-at="2017-05-11T14:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:21:18Z" finished-at="2017-05-11T14:21:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageStoreListDropdown2 status=SUCCESS method=GARun.checkAverageStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageQuarterDropdown" duration-ms="23628" started-at="2017-05-11T14:21:18Z" finished-at="2017-05-11T14:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:21:41Z" finished-at="2017-05-11T14:21:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageQuarterDropdown status=SUCCESS method=GARun.checkAverageQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAveragePeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAveragePeriodDropdown" duration-ms="37022" started-at="2017-05-11T14:21:41Z" finished-at="2017-05-11T14:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAveragePeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="26" started-at="2017-05-11T14:22:18Z" finished-at="2017-05-11T14:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAveragePeriodDropdown status=SUCCESS method=GARun.checkAveragePeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageFilterDataCheck" duration-ms="9365" started-at="2017-05-11T14:22:18Z" finished-at="2017-05-11T14:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:22:28Z" finished-at="2017-05-11T14:22:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageFilterDataCheck status=SUCCESS method=GARun.checkAverageFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageOverTime" duration-ms="4592" started-at="2017-05-11T14:22:28Z" finished-at="2017-05-11T14:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:22:32Z" finished-at="2017-05-11T14:22:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageOverTime status=SUCCESS method=GARun.checkAverageOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="caOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caOTFilerCheck" duration-ms="9218" started-at="2017-05-11T14:22:32Z" finished-at="2017-05-11T14:22:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.caOTFilerCheck(GARun.java:236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:22:42Z" finished-at="2017-05-11T14:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caOTFilerCheck status=FAILURE method=GARun.caOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="caOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caOTBack" duration-ms="8232" started-at="2017-05-11T14:22:42Z" finished-at="2017-05-11T14:22:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:22:50Z" finished-at="2017-05-11T14:22:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caOTBack status=SUCCESS method=GARun.caOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageTopStores()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageTopStores" duration-ms="4675" started-at="2017-05-11T14:22:50Z" finished-at="2017-05-11T14:22:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageTopStores -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="47" started-at="2017-05-11T14:22:55Z" finished-at="2017-05-11T14:22:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageTopStores status=SUCCESS method=GARun.checkAverageTopStores()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="caTSFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caTSFilerCheck" duration-ms="8766" started-at="2017-05-11T14:22:55Z" finished-at="2017-05-11T14:23:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.caTSFilerCheck(GARun.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caTSFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:23:03Z" finished-at="2017-05-11T14:23:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caTSFilerCheck status=FAILURE method=GARun.caTSFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="caTSBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caTSBack" duration-ms="8225" started-at="2017-05-11T14:23:03Z" finished-at="2017-05-11T14:23:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caTSBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:23:12Z" finished-at="2017-05-11T14:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caTSBack status=SUCCESS method=GARun.caTSBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageMenuMix()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageMenuMix" duration-ms="4551" started-at="2017-05-11T14:23:12Z" finished-at="2017-05-11T14:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageMenuMix -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:23:16Z" finished-at="2017-05-11T14:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageMenuMix status=SUCCESS method=GARun.checkAverageMenuMix()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="caMMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caMMFilerCheck" duration-ms="16247" started-at="2017-05-11T14:23:16Z" finished-at="2017-05-11T14:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caMMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="42" started-at="2017-05-11T14:23:32Z" finished-at="2017-05-11T14:23:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caMMFilerCheck status=SUCCESS method=GARun.caMMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="caMMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="caMMBack" duration-ms="8302" started-at="2017-05-11T14:23:33Z" finished-at="2017-05-11T14:23:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caMMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="39" started-at="2017-05-11T14:23:41Z" finished-at="2017-05-11T14:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=caMMBack status=SUCCESS method=GARun.caMMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkAverageBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkAverageBack" duration-ms="2373" started-at="2017-05-11T14:23:41Z" finished-at="2017-05-11T14:23:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAverageBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:23:43Z" finished-at="2017-05-11T14:23:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAverageBack status=SUCCESS method=GARun.checkAverageBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_guestMixNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_guestMixNavigator" duration-ms="45154" started-at="2017-05-11T14:23:43Z" finished-at="2017-05-11T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_guestMixNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="24" started-at="2017-05-11T14:24:28Z" finished-at="2017-05-11T14:24:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_guestMixNavigator status=SUCCESS method=GARun.L2_guestMixNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixStoreNameDropdown1" duration-ms="247" started-at="2017-05-11T14:24:28Z" finished-at="2017-05-11T14:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:24:29Z" finished-at="2017-05-11T14:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixStoreNameDropdown1 status=SUCCESS method=GARun.guestMixStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixStoreListDropdown2" duration-ms="319" started-at="2017-05-11T14:24:29Z" finished-at="2017-05-11T14:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:24:29Z" finished-at="2017-05-11T14:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixStoreListDropdown2 status=SUCCESS method=GARun.guestMixStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixQuarterDropdown" duration-ms="29700" started-at="2017-05-11T14:24:29Z" finished-at="2017-05-11T14:24:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="24" started-at="2017-05-11T14:24:59Z" finished-at="2017-05-11T14:24:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixQuarterDropdown status=SUCCESS method=GARun.guestMixQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixPeriodDropdown" duration-ms="37656" started-at="2017-05-11T14:24:59Z" finished-at="2017-05-11T14:25:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="63" started-at="2017-05-11T14:25:36Z" finished-at="2017-05-11T14:25:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixPeriodDropdown status=SUCCESS method=GARun.guestMixPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixFilterDataCheck" duration-ms="6149" started-at="2017-05-11T14:25:37Z" finished-at="2017-05-11T14:25:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:25:43Z" finished-at="2017-05-11T14:25:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixFilterDataCheck status=SUCCESS method=GARun.guestMixFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixOverTime" duration-ms="4654" started-at="2017-05-11T14:25:43Z" finished-at="2017-05-11T14:25:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:25:47Z" finished-at="2017-05-11T14:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixOverTime status=SUCCESS method=GARun.guestMixOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gmOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmOTFilerCheck" duration-ms="9168" started-at="2017-05-11T14:25:47Z" finished-at="2017-05-11T14:25:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gmOTFilerCheck(GARun.java:334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:25:57Z" finished-at="2017-05-11T14:25:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmOTFilerCheck status=FAILURE method=GARun.gmOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gmOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmOTBack" duration-ms="8247" started-at="2017-05-11T14:25:57Z" finished-at="2017-05-11T14:26:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:26:05Z" finished-at="2017-05-11T14:26:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmOTBack status=SUCCESS method=GARun.gmOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixDayPart" duration-ms="4591" started-at="2017-05-11T14:26:05Z" finished-at="2017-05-11T14:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixDayPart -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:26:09Z" finished-at="2017-05-11T14:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixDayPart status=SUCCESS method=GARun.guestMixDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gmDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmDPFilerCheck" duration-ms="8640" started-at="2017-05-11T14:26:09Z" finished-at="2017-05-11T14:26:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gmDPFilerCheck(GARun.java:352)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmDPFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="129" started-at="2017-05-11T14:26:18Z" finished-at="2017-05-11T14:26:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmDPFilerCheck status=FAILURE method=GARun.gmDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gmDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmDPBack" duration-ms="8213" started-at="2017-05-11T14:26:18Z" finished-at="2017-05-11T14:26:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:26:26Z" finished-at="2017-05-11T14:26:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmDPBack status=SUCCESS method=GARun.gmDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixOrderMode" duration-ms="4625" started-at="2017-05-11T14:26:27Z" finished-at="2017-05-11T14:26:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="48" started-at="2017-05-11T14:26:31Z" finished-at="2017-05-11T14:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixOrderMode status=SUCCESS method=GARun.guestMixOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gmOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmOMFilerCheck" duration-ms="10354" started-at="2017-05-11T14:26:31Z" finished-at="2017-05-11T14:26:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gmOMFilerCheck(GARun.java:370)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:26:42Z" finished-at="2017-05-11T14:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmOMFilerCheck status=FAILURE method=GARun.gmOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gmOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmOMBack" duration-ms="8387" started-at="2017-05-11T14:26:42Z" finished-at="2017-05-11T14:26:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:26:50Z" finished-at="2017-05-11T14:26:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmOMBack status=SUCCESS method=GARun.gmOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixDayOfWeek" duration-ms="4713" started-at="2017-05-11T14:26:50Z" finished-at="2017-05-11T14:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:26:55Z" finished-at="2017-05-11T14:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixDayOfWeek status=SUCCESS method=GARun.guestMixDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gmDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmDWFilerCheck" duration-ms="13297" started-at="2017-05-11T14:26:55Z" finished-at="2017-05-11T14:27:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gmDWFilerCheck(GARun.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="43" started-at="2017-05-11T14:27:08Z" finished-at="2017-05-11T14:27:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmDWFilerCheck status=FAILURE method=GARun.gmDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gmDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gmDWBack" duration-ms="8363" started-at="2017-05-11T14:27:08Z" finished-at="2017-05-11T14:27:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gmDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="41" started-at="2017-05-11T14:27:16Z" finished-at="2017-05-11T14:27:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gmDWBack status=SUCCESS method=GARun.gmDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestMixBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestMixBack" duration-ms="1956" started-at="2017-05-11T14:27:16Z" finished-at="2017-05-11T14:27:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestMixBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:27:18Z" finished-at="2017-05-11T14:27:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestMixBack status=SUCCESS method=GARun.guestMixBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="L2_checkCountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_checkCountNavigator" duration-ms="155551" started-at="2017-05-11T14:27:18Z" finished-at="2017-05-11T14:29:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.L2_checkCountNavigator(GARun.java:408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_checkCountNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:29:54Z" finished-at="2017-05-11T14:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_checkCountNavigator status=FAILURE method=GARun.L2_checkCountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountStoreNameDropdown1" duration-ms="285" started-at="2017-05-11T14:29:54Z" finished-at="2017-05-11T14:29:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="22" started-at="2017-05-11T14:29:54Z" finished-at="2017-05-11T14:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountStoreNameDropdown1 status=SUCCESS method=GARun.checkCountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountStoreListDropdown2" duration-ms="348" started-at="2017-05-11T14:29:54Z" finished-at="2017-05-11T14:29:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:29:55Z" finished-at="2017-05-11T14:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountStoreListDropdown2 status=SUCCESS method=GARun.checkCountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountQuarterDropdown" duration-ms="34954" started-at="2017-05-11T14:29:55Z" finished-at="2017-05-11T14:30:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:30:30Z" finished-at="2017-05-11T14:30:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountQuarterDropdown status=SUCCESS method=GARun.checkCountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountPeriodDropdown" duration-ms="3594" started-at="2017-05-11T14:30:30Z" finished-at="2017-05-11T14:30:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:30:33Z" finished-at="2017-05-11T14:30:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountPeriodDropdown status=SUCCESS method=GARun.checkCountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountFilterDataCheck" duration-ms="8057" started-at="2017-05-11T14:30:33Z" finished-at="2017-05-11T14:30:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:30:41Z" finished-at="2017-05-11T14:30:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountFilterDataCheck status=SUCCESS method=GARun.checkCountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountOverTime" duration-ms="16536" started-at="2017-05-11T14:30:41Z" finished-at="2017-05-11T14:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="19" started-at="2017-05-11T14:30:58Z" finished-at="2017-05-11T14:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountOverTime status=SUCCESS method=GARun.checkCountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="ccOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccOTFilerCheck" duration-ms="16819" started-at="2017-05-11T14:30:58Z" finished-at="2017-05-11T14:31:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:31:15Z" finished-at="2017-05-11T14:31:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccOTFilerCheck status=SUCCESS method=GARun.ccOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="ccOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccOTBack" duration-ms="8270" started-at="2017-05-11T14:31:15Z" finished-at="2017-05-11T14:31:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="22" started-at="2017-05-11T14:31:23Z" finished-at="2017-05-11T14:31:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccOTBack status=SUCCESS method=GARun.ccOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountDayPart" duration-ms="4656" started-at="2017-05-11T14:31:23Z" finished-at="2017-05-11T14:31:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountDayPart -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:31:28Z" finished-at="2017-05-11T14:31:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountDayPart status=SUCCESS method=GARun.checkCountDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="ccDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccDPFilerCheck" duration-ms="9050" started-at="2017-05-11T14:31:28Z" finished-at="2017-05-11T14:31:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.ccDPFilerCheck(GARun.java:467)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccDPFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:31:37Z" finished-at="2017-05-11T14:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccDPFilerCheck status=FAILURE method=GARun.ccDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="ccDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccDPBack" duration-ms="8197" started-at="2017-05-11T14:31:37Z" finished-at="2017-05-11T14:31:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:31:45Z" finished-at="2017-05-11T14:31:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccDPBack status=SUCCESS method=GARun.ccDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountOrderMode" duration-ms="4563" started-at="2017-05-11T14:31:45Z" finished-at="2017-05-11T14:31:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:31:50Z" finished-at="2017-05-11T14:31:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountOrderMode status=SUCCESS method=GARun.checkCountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="ccOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccOMFilerCheck" duration-ms="8967" started-at="2017-05-11T14:31:50Z" finished-at="2017-05-11T14:31:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.ccOMFilerCheck(GARun.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:31:59Z" finished-at="2017-05-11T14:31:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccOMFilerCheck status=FAILURE method=GARun.ccOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="ccOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccOMBack" duration-ms="8265" started-at="2017-05-11T14:31:59Z" finished-at="2017-05-11T14:32:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:32:07Z" finished-at="2017-05-11T14:32:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccOMBack status=SUCCESS method=GARun.ccOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountDayOfWeek" duration-ms="4870" started-at="2017-05-11T14:32:07Z" finished-at="2017-05-11T14:32:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:32:12Z" finished-at="2017-05-11T14:32:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountDayOfWeek status=SUCCESS method=GARun.checkCountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="ccDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccDWFilerCheck" duration-ms="9325" started-at="2017-05-11T14:32:12Z" finished-at="2017-05-11T14:32:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.ccDWFilerCheck(GARun.java:503)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:32:21Z" finished-at="2017-05-11T14:32:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccDWFilerCheck status=FAILURE method=GARun.ccDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="ccDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="ccDWBack" duration-ms="8257" started-at="2017-05-11T14:32:21Z" finished-at="2017-05-11T14:32:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="41" started-at="2017-05-11T14:32:30Z" finished-at="2017-05-11T14:32:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccDWBack status=SUCCESS method=GARun.ccDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="checkCountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="checkCountBack" duration-ms="2361" started-at="2017-05-11T14:32:30Z" finished-at="2017-05-11T14:32:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:32:32Z" finished-at="2017-05-11T14:32:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCountBack status=SUCCESS method=GARun.checkCountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_discountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_discountNavigator" duration-ms="28050" started-at="2017-05-11T14:32:32Z" finished-at="2017-05-11T14:33:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_discountNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="27" started-at="2017-05-11T14:33:00Z" finished-at="2017-05-11T14:33:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_discountNavigator status=SUCCESS method=GARun.L2_discountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountStoreNameDropdown1" duration-ms="273" started-at="2017-05-11T14:33:00Z" finished-at="2017-05-11T14:33:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:33:00Z" finished-at="2017-05-11T14:33:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountStoreNameDropdown1 status=SUCCESS method=GARun.discountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountStoreListDropdown2" duration-ms="375" started-at="2017-05-11T14:33:00Z" finished-at="2017-05-11T14:33:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:33:01Z" finished-at="2017-05-11T14:33:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountStoreListDropdown2 status=SUCCESS method=GARun.discountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountQuarterDropdown" duration-ms="27051" started-at="2017-05-11T14:33:01Z" finished-at="2017-05-11T14:33:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:33:28Z" finished-at="2017-05-11T14:33:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountQuarterDropdown status=SUCCESS method=GARun.discountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountPeriodDropdown" duration-ms="20300" started-at="2017-05-11T14:33:28Z" finished-at="2017-05-11T14:33:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:33:48Z" finished-at="2017-05-11T14:33:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountPeriodDropdown status=SUCCESS method=GARun.discountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountFilterDataCheck" duration-ms="8590" started-at="2017-05-11T14:33:48Z" finished-at="2017-05-11T14:33:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="43" started-at="2017-05-11T14:33:57Z" finished-at="2017-05-11T14:33:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountFilterDataCheck status=SUCCESS method=GARun.discountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountOverTime" duration-ms="12952" started-at="2017-05-11T14:33:57Z" finished-at="2017-05-11T14:34:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="47" started-at="2017-05-11T14:34:10Z" finished-at="2017-05-11T14:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountOverTime status=SUCCESS method=GARun.discountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dOTFilerCheck" duration-ms="16971" started-at="2017-05-11T14:34:10Z" finished-at="2017-05-11T14:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:34:27Z" finished-at="2017-05-11T14:34:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dOTFilerCheck status=SUCCESS method=GARun.dOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dOTBack" duration-ms="8248" started-at="2017-05-11T14:34:27Z" finished-at="2017-05-11T14:34:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="87" started-at="2017-05-11T14:34:35Z" finished-at="2017-05-11T14:34:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dOTBack status=SUCCESS method=GARun.dOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountDiscountDistribution()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountDiscountDistribution" duration-ms="4484" started-at="2017-05-11T14:34:35Z" finished-at="2017-05-11T14:34:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountDiscountDistribution -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="49" started-at="2017-05-11T14:34:40Z" finished-at="2017-05-11T14:34:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountDiscountDistribution status=SUCCESS method=GARun.discountDiscountDistribution()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dDDFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dDDFilerCheck" duration-ms="15788" started-at="2017-05-11T14:34:40Z" finished-at="2017-05-11T14:34:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dDDFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:34:56Z" finished-at="2017-05-11T14:34:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dDDFilerCheck status=SUCCESS method=GARun.dDDFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dDDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dDDPBack" duration-ms="8191" started-at="2017-05-11T14:34:56Z" finished-at="2017-05-11T14:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dDDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:35:04Z" finished-at="2017-05-11T14:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dDDPBack status=SUCCESS method=GARun.dDDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountOrderMode" duration-ms="4628" started-at="2017-05-11T14:35:04Z" finished-at="2017-05-11T14:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="84" started-at="2017-05-11T14:35:08Z" finished-at="2017-05-11T14:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountOrderMode status=SUCCESS method=GARun.discountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="dOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dOMFilerCheck" duration-ms="8996" started-at="2017-05-11T14:35:08Z" finished-at="2017-05-11T14:35:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.dOMFilerCheck(GARun.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="43" started-at="2017-05-11T14:35:17Z" finished-at="2017-05-11T14:35:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dOMFilerCheck status=FAILURE method=GARun.dOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dOMBack" duration-ms="8209" started-at="2017-05-11T14:35:18Z" finished-at="2017-05-11T14:35:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:35:26Z" finished-at="2017-05-11T14:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dOMBack status=SUCCESS method=GARun.dOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountDayOfWeek" duration-ms="4652" started-at="2017-05-11T14:35:26Z" finished-at="2017-05-11T14:35:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:35:30Z" finished-at="2017-05-11T14:35:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountDayOfWeek status=SUCCESS method=GARun.discountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="dDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dDWFilerCheck" duration-ms="8893" started-at="2017-05-11T14:35:30Z" finished-at="2017-05-11T14:35:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.dDWFilerCheck(GARun.java:618)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:35:39Z" finished-at="2017-05-11T14:35:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dDWFilerCheck status=FAILURE method=GARun.dDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="dDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="dDWBack" duration-ms="8209" started-at="2017-05-11T14:35:39Z" finished-at="2017-05-11T14:35:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:35:48Z" finished-at="2017-05-11T14:35:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dDWBack status=SUCCESS method=GARun.dDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="discountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="discountBack" duration-ms="1894" started-at="2017-05-11T14:35:48Z" finished-at="2017-05-11T14:35:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="13" started-at="2017-05-11T14:35:50Z" finished-at="2017-05-11T14:35:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountBack status=SUCCESS method=GARun.discountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_grossSalesNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_grossSalesNavigator" duration-ms="29975" started-at="2017-05-11T14:35:50Z" finished-at="2017-05-11T14:36:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_grossSalesNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="44" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_grossSalesNavigator status=SUCCESS method=GARun.L2_grossSalesNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesStoreNameDropdown1" duration-ms="283" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesStoreNameDropdown1 status=SUCCESS method=GARun.grossSalesStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesStoreListDropdown2" duration-ms="316" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="24" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesStoreListDropdown2 status=SUCCESS method=GARun.grossSalesStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesQuarterDropdown" duration-ms="35345" started-at="2017-05-11T14:36:20Z" finished-at="2017-05-11T14:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:36:56Z" finished-at="2017-05-11T14:36:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesQuarterDropdown status=SUCCESS method=GARun.grossSalesQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesPeriodDropdown" duration-ms="4202" started-at="2017-05-11T14:36:56Z" finished-at="2017-05-11T14:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:37:00Z" finished-at="2017-05-11T14:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesPeriodDropdown status=SUCCESS method=GARun.grossSalesPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesFilterDataCheck" duration-ms="8794" started-at="2017-05-11T14:37:00Z" finished-at="2017-05-11T14:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:37:09Z" finished-at="2017-05-11T14:37:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesFilterDataCheck status=SUCCESS method=GARun.grossSalesFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesOverTime" duration-ms="18721" started-at="2017-05-11T14:37:09Z" finished-at="2017-05-11T14:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:37:27Z" finished-at="2017-05-11T14:37:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesOverTime status=SUCCESS method=GARun.grossSalesOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grsSOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSOTFilerCheck" duration-ms="17738" started-at="2017-05-11T14:37:27Z" finished-at="2017-05-11T14:37:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:37:45Z" finished-at="2017-05-11T14:37:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSOTFilerCheck status=SUCCESS method=GARun.grsSOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grsSOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSOTBack" duration-ms="8263" started-at="2017-05-11T14:37:45Z" finished-at="2017-05-11T14:37:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:37:53Z" finished-at="2017-05-11T14:37:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSOTBack status=SUCCESS method=GARun.grsSOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesDayPart" duration-ms="4719" started-at="2017-05-11T14:37:53Z" finished-at="2017-05-11T14:37:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesDayPart -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:37:58Z" finished-at="2017-05-11T14:37:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesDayPart status=SUCCESS method=GARun.grossSalesDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="grsSDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSDPFilerCheck" duration-ms="9118" started-at="2017-05-11T14:37:58Z" finished-at="2017-05-11T14:38:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.grsSDPFilerCheck(GARun.java:697)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSDPFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:38:07Z" finished-at="2017-05-11T14:38:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSDPFilerCheck status=FAILURE method=GARun.grsSDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grsSDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSDPBack" duration-ms="8202" started-at="2017-05-11T14:38:07Z" finished-at="2017-05-11T14:38:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:38:16Z" finished-at="2017-05-11T14:38:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSDPBack status=SUCCESS method=GARun.grsSDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesOrderMode" duration-ms="4496" started-at="2017-05-11T14:38:16Z" finished-at="2017-05-11T14:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:38:20Z" finished-at="2017-05-11T14:38:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesOrderMode status=SUCCESS method=GARun.grossSalesOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="grsSOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSOMFilerCheck" duration-ms="9367" started-at="2017-05-11T14:38:20Z" finished-at="2017-05-11T14:38:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.grsSOMFilerCheck(GARun.java:715)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:38:30Z" finished-at="2017-05-11T14:38:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSOMFilerCheck status=FAILURE method=GARun.grsSOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grsSOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSOMBack" duration-ms="8194" started-at="2017-05-11T14:38:30Z" finished-at="2017-05-11T14:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="21" started-at="2017-05-11T14:38:38Z" finished-at="2017-05-11T14:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSOMBack status=SUCCESS method=GARun.grsSOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesDayOfWeek" duration-ms="4714" started-at="2017-05-11T14:38:38Z" finished-at="2017-05-11T14:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:38:42Z" finished-at="2017-05-11T14:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesDayOfWeek status=SUCCESS method=GARun.grossSalesDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="grsSDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSDWFilerCheck" duration-ms="9517" started-at="2017-05-11T14:38:43Z" finished-at="2017-05-11T14:38:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.grsSDWFilerCheck(GARun.java:733)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:38:52Z" finished-at="2017-05-11T14:38:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSDWFilerCheck status=FAILURE method=GARun.grsSDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grsSDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grsSDWBack" duration-ms="8240" started-at="2017-05-11T14:38:52Z" finished-at="2017-05-11T14:39:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grsSDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:39:00Z" finished-at="2017-05-11T14:39:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grsSDWBack status=SUCCESS method=GARun.grsSDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="grossSalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="grossSalesBack" duration-ms="2030" started-at="2017-05-11T14:39:00Z" finished-at="2017-05-11T14:39:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grossSalesBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:39:02Z" finished-at="2017-05-11T14:39:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grossSalesBack status=SUCCESS method=GARun.grossSalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L2_guestCountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L2_guestCountNavigator" duration-ms="29652" started-at="2017-05-11T14:39:02Z" finished-at="2017-05-11T14:39:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L2_guestCountNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:39:32Z" finished-at="2017-05-11T14:39:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L2_guestCountNavigator status=SUCCESS method=GARun.L2_guestCountNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountStoreNameDropdown1" duration-ms="330" started-at="2017-05-11T14:39:32Z" finished-at="2017-05-11T14:39:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountStoreNameDropdown1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:39:32Z" finished-at="2017-05-11T14:39:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountStoreNameDropdown1 status=SUCCESS method=GARun.guestCountStoreNameDropdown1()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountStoreListDropdown2" duration-ms="373" started-at="2017-05-11T14:39:32Z" finished-at="2017-05-11T14:39:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountStoreListDropdown2 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:39:33Z" finished-at="2017-05-11T14:39:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountStoreListDropdown2 status=SUCCESS method=GARun.guestCountStoreListDropdown2()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountQuarterDropdown" duration-ms="39963" started-at="2017-05-11T14:39:33Z" finished-at="2017-05-11T14:40:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountQuarterDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:40:13Z" finished-at="2017-05-11T14:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountQuarterDropdown status=SUCCESS method=GARun.guestCountQuarterDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountPeriodDropdown" duration-ms="4013" started-at="2017-05-11T14:40:13Z" finished-at="2017-05-11T14:40:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountPeriodDropdown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="27" started-at="2017-05-11T14:40:17Z" finished-at="2017-05-11T14:40:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountPeriodDropdown status=SUCCESS method=GARun.guestCountPeriodDropdown()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountFilterDataCheck" duration-ms="8028" started-at="2017-05-11T14:40:17Z" finished-at="2017-05-11T14:40:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountFilterDataCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="33" started-at="2017-05-11T14:40:25Z" finished-at="2017-05-11T14:40:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountFilterDataCheck status=SUCCESS method=GARun.guestCountFilterDataCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountOverTime" duration-ms="17978" started-at="2017-05-11T14:40:25Z" finished-at="2017-05-11T14:40:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountOverTime -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="84" started-at="2017-05-11T14:40:43Z" finished-at="2017-05-11T14:40:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountOverTime status=SUCCESS method=GARun.guestCountOverTime()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gcOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcOTFilerCheck" duration-ms="17482" started-at="2017-05-11T14:40:43Z" finished-at="2017-05-11T14:41:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcOTFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:41:00Z" finished-at="2017-05-11T14:41:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcOTFilerCheck status=SUCCESS method=GARun.gcOTFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gcOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcOTBack" duration-ms="8270" started-at="2017-05-11T14:41:00Z" finished-at="2017-05-11T14:41:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcOTBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:41:09Z" finished-at="2017-05-11T14:41:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcOTBack status=SUCCESS method=GARun.gcOTBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountDayPart" duration-ms="4693" started-at="2017-05-11T14:41:09Z" finished-at="2017-05-11T14:41:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountDayPart -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:41:13Z" finished-at="2017-05-11T14:41:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountDayPart status=SUCCESS method=GARun.guestCountDayPart()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gcDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcDPFilerCheck" duration-ms="8765" started-at="2017-05-11T14:41:14Z" finished-at="2017-05-11T14:41:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gcDPFilerCheck(GARun.java:812)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcDPFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:41:22Z" finished-at="2017-05-11T14:41:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcDPFilerCheck status=FAILURE method=GARun.gcDPFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gcDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcDPBack" duration-ms="8214" started-at="2017-05-11T14:41:22Z" finished-at="2017-05-11T14:41:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcDPBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:41:31Z" finished-at="2017-05-11T14:41:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcDPBack status=SUCCESS method=GARun.gcDPBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountOrderMode" duration-ms="4496" started-at="2017-05-11T14:41:31Z" finished-at="2017-05-11T14:41:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountOrderMode -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:41:35Z" finished-at="2017-05-11T14:41:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountOrderMode status=SUCCESS method=GARun.guestCountOrderMode()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gcOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcOMFilerCheck" duration-ms="8936" started-at="2017-05-11T14:41:35Z" finished-at="2017-05-11T14:41:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gcOMFilerCheck(GARun.java:830)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcOMFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="34" started-at="2017-05-11T14:41:44Z" finished-at="2017-05-11T14:41:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcOMFilerCheck status=FAILURE method=GARun.gcOMFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gcOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcOMBack" duration-ms="8202" started-at="2017-05-11T14:41:44Z" finished-at="2017-05-11T14:41:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcOMBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:41:52Z" finished-at="2017-05-11T14:41:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcOMBack status=SUCCESS method=GARun.gcOMBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountDayOfWeek" duration-ms="4566" started-at="2017-05-11T14:41:52Z" finished-at="2017-05-11T14:41:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountDayOfWeek -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:41:57Z" finished-at="2017-05-11T14:41:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountDayOfWeek status=SUCCESS method=GARun.guestCountDayOfWeek()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="gcDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcDWFilerCheck" duration-ms="9102" started-at="2017-05-11T14:41:57Z" finished-at="2017-05-11T14:42:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at analyticsLive.GARun.gcDWFilerCheck(GARun.java:848)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcDWFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:42:06Z" finished-at="2017-05-11T14:42:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcDWFilerCheck status=FAILURE method=GARun.gcDWFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gcDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="gcDWBack" duration-ms="8217" started-at="2017-05-11T14:42:06Z" finished-at="2017-05-11T14:42:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gcDWBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="37" started-at="2017-05-11T14:42:14Z" finished-at="2017-05-11T14:42:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gcDWBack status=SUCCESS method=GARun.gcDWBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="guestCountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="guestCountBack" duration-ms="2057" started-at="2017-05-11T14:42:14Z" finished-at="2017-05-11T14:42:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestCountBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:42:16Z" finished-at="2017-05-11T14:42:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestCountBack status=SUCCESS method=GARun.guestCountBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_ItemSales()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_ItemSales" duration-ms="15749" started-at="2017-05-11T14:42:16Z" finished-at="2017-05-11T14:42:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_ItemSales -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:42:32Z" finished-at="2017-05-11T14:42:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_ItemSales status=SUCCESS method=GARun.L3_ItemSales()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="itemSalesFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="itemSalesFilerCheck" duration-ms="22716" started-at="2017-05-11T14:42:32Z" finished-at="2017-05-11T14:42:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemSalesFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="41" started-at="2017-05-11T14:42:55Z" finished-at="2017-05-11T14:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=itemSalesFilerCheck status=SUCCESS method=GARun.itemSalesFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="itemSalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="itemSalesBack" duration-ms="841" started-at="2017-05-11T14:42:55Z" finished-at="2017-05-11T14:42:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemSalesBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="26" started-at="2017-05-11T14:42:56Z" finished-at="2017-05-11T14:42:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=itemSalesBack status=SUCCESS method=GARun.itemSalesBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_TopStores()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_TopStores" duration-ms="5823" started-at="2017-05-11T14:42:56Z" finished-at="2017-05-11T14:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_TopStores -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:43:02Z" finished-at="2017-05-11T14:43:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_TopStores status=SUCCESS method=GARun.L3_TopStores()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="topStoresFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="topStoresFilerCheck" duration-ms="17747" started-at="2017-05-11T14:43:02Z" finished-at="2017-05-11T14:43:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topStoresFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="38" started-at="2017-05-11T14:43:19Z" finished-at="2017-05-11T14:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topStoresFilerCheck status=SUCCESS method=GARun.topStoresFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="topStoresBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="topStoresBack" duration-ms="740" started-at="2017-05-11T14:43:19Z" finished-at="2017-05-11T14:43:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topStoresBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="25" started-at="2017-05-11T14:43:20Z" finished-at="2017-05-11T14:43:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topStoresBack status=SUCCESS method=GARun.topStoresBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_Campaign()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_Campaign" duration-ms="5651" started-at="2017-05-11T14:43:20Z" finished-at="2017-05-11T14:43:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_Campaign -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:43:26Z" finished-at="2017-05-11T14:43:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_Campaign status=SUCCESS method=GARun.L3_Campaign()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="campaignFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="campaignFilerCheck" duration-ms="21076" started-at="2017-05-11T14:43:26Z" finished-at="2017-05-11T14:43:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- campaignFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="29" started-at="2017-05-11T14:43:47Z" finished-at="2017-05-11T14:43:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=campaignFilerCheck status=SUCCESS method=GARun.campaignFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="campaignBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="campaignBack" duration-ms="826" started-at="2017-05-11T14:43:47Z" finished-at="2017-05-11T14:43:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- campaignBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="25" started-at="2017-05-11T14:43:48Z" finished-at="2017-05-11T14:43:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=campaignBack status=SUCCESS method=GARun.campaignBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_clusterSpendNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_clusterSpendNavigator" duration-ms="18457" started-at="2017-05-11T14:43:48Z" finished-at="2017-05-11T14:44:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_clusterSpendNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:44:06Z" finished-at="2017-05-11T14:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_clusterSpendNavigator status=SUCCESS method=GARun.L3_clusterSpendNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterSpendFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterSpendFilerCheck" duration-ms="21757" started-at="2017-05-11T14:44:06Z" finished-at="2017-05-11T14:44:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterSpendFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="39" started-at="2017-05-11T14:44:28Z" finished-at="2017-05-11T14:44:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterSpendFilerCheck status=SUCCESS method=GARun.clusterSpendFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterSpendBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterSpendBack" duration-ms="2070" started-at="2017-05-11T14:44:28Z" finished-at="2017-05-11T14:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterSpendBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="28" started-at="2017-05-11T14:44:30Z" finished-at="2017-05-11T14:44:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterSpendBack status=SUCCESS method=GARun.clusterSpendBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_clusterFrequencyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_clusterFrequencyNavigator" duration-ms="17714" started-at="2017-05-11T14:44:30Z" finished-at="2017-05-11T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_clusterFrequencyNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:44:48Z" finished-at="2017-05-11T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_clusterFrequencyNavigator status=SUCCESS method=GARun.L3_clusterFrequencyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterFrequencyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterFrequencyFilerCheck" duration-ms="24079" started-at="2017-05-11T14:44:48Z" finished-at="2017-05-11T14:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterFrequencyFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="39" started-at="2017-05-11T14:45:12Z" finished-at="2017-05-11T14:45:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterFrequencyFilerCheck status=SUCCESS method=GARun.clusterFrequencyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterFrequencyBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterFrequencyBack" duration-ms="2265" started-at="2017-05-11T14:45:12Z" finished-at="2017-05-11T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterFrequencyBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:45:14Z" finished-at="2017-05-11T14:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterFrequencyBack status=SUCCESS method=GARun.clusterFrequencyBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_clusterVolumeNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_clusterVolumeNavigator" duration-ms="21574" started-at="2017-05-11T14:45:14Z" finished-at="2017-05-11T14:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_clusterVolumeNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="22" started-at="2017-05-11T14:45:36Z" finished-at="2017-05-11T14:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_clusterVolumeNavigator status=SUCCESS method=GARun.L3_clusterVolumeNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterVolumeFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterVolumeFilerCheck" duration-ms="21386" started-at="2017-05-11T14:45:36Z" finished-at="2017-05-11T14:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterVolumeFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:45:57Z" finished-at="2017-05-11T14:45:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterVolumeFilerCheck status=SUCCESS method=GARun.clusterVolumeFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterVolumeBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterVolumeBack" duration-ms="3346" started-at="2017-05-11T14:45:57Z" finished-at="2017-05-11T14:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterVolumeBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:46:01Z" finished-at="2017-05-11T14:46:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterVolumeBack status=SUCCESS method=GARun.clusterVolumeBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_clusterRecencyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_clusterRecencyNavigator" duration-ms="21614" started-at="2017-05-11T14:46:01Z" finished-at="2017-05-11T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_clusterRecencyNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:46:22Z" finished-at="2017-05-11T14:46:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_clusterRecencyNavigator status=SUCCESS method=GARun.L3_clusterRecencyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterRecencyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterRecencyFilerCheck" duration-ms="23563" started-at="2017-05-11T14:46:22Z" finished-at="2017-05-11T14:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterRecencyFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="44" started-at="2017-05-11T14:46:46Z" finished-at="2017-05-11T14:46:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterRecencyFilerCheck status=SUCCESS method=GARun.clusterRecencyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="clusterRecencyBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="clusterRecencyBack" duration-ms="2602" started-at="2017-05-11T14:46:46Z" finished-at="2017-05-11T14:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clusterRecencyBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="30" started-at="2017-05-11T14:46:49Z" finished-at="2017-05-11T14:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clusterRecencyBack status=SUCCESS method=GARun.clusterRecencyBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_PersonaNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_PersonaNavigator" duration-ms="17649" started-at="2017-05-11T14:46:49Z" finished-at="2017-05-11T14:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_PersonaNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:47:06Z" finished-at="2017-05-11T14:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_PersonaNavigator status=SUCCESS method=GARun.L3_PersonaNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="PersonaFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="PersonaFilerCheck" duration-ms="21600" started-at="2017-05-11T14:47:06Z" finished-at="2017-05-11T14:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PersonaFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="40" started-at="2017-05-11T14:47:28Z" finished-at="2017-05-11T14:47:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PersonaFilerCheck status=SUCCESS method=GARun.PersonaFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="PersonaBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="PersonaBack" duration-ms="2174" started-at="2017-05-11T14:47:28Z" finished-at="2017-05-11T14:47:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PersonaBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="32" started-at="2017-05-11T14:47:30Z" finished-at="2017-05-11T14:47:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PersonaBack status=SUCCESS method=GARun.PersonaBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_PromotionNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_PromotionNavigator" duration-ms="18468" started-at="2017-05-11T14:47:30Z" finished-at="2017-05-11T14:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_PromotionNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:47:49Z" finished-at="2017-05-11T14:47:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_PromotionNavigator status=SUCCESS method=GARun.L3_PromotionNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="PromotionFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="PromotionFilerCheck" duration-ms="24988" started-at="2017-05-11T14:47:49Z" finished-at="2017-05-11T14:48:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PromotionFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="36" started-at="2017-05-11T14:48:14Z" finished-at="2017-05-11T14:48:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PromotionFilerCheck status=SUCCESS method=GARun.PromotionFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="PromotionBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="PromotionBack" duration-ms="2511" started-at="2017-05-11T14:48:14Z" finished-at="2017-05-11T14:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PromotionBack -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="31" started-at="2017-05-11T14:48:16Z" finished-at="2017-05-11T14:48:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PromotionBack status=SUCCESS method=GARun.PromotionBack()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_LoyaltyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_LoyaltyNavigator" duration-ms="18272" started-at="2017-05-11T14:48:16Z" finished-at="2017-05-11T14:48:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_LoyaltyNavigator -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="53" started-at="2017-05-11T14:48:34Z" finished-at="2017-05-11T14:48:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_LoyaltyNavigator status=SUCCESS method=GARun.L3_LoyaltyNavigator()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="LoyaltyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="LoyaltyFilerCheck" duration-ms="20089" started-at="2017-05-11T14:48:35Z" finished-at="2017-05-11T14:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoyaltyFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="22" started-at="2017-05-11T14:48:55Z" finished-at="2017-05-11T14:48:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoyaltyFilerCheck status=SUCCESS method=GARun.LoyaltyFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L1_SMA()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L1_SMA" duration-ms="13163" started-at="2017-05-11T14:48:55Z" finished-at="2017-05-11T14:49:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L1_SMA -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="16" started-at="2017-05-11T14:49:08Z" finished-at="2017-05-11T14:49:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L1_SMA status=SUCCESS method=GARun.L1_SMA()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="L3_SMSDetails()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="L3_SMSDetails" duration-ms="9200" started-at="2017-05-11T14:49:08Z" finished-at="2017-05-11T14:49:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- L3_SMSDetails -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="45" started-at="2017-05-11T14:49:17Z" finished-at="2017-05-11T14:49:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=L3_SMSDetails status=SUCCESS method=GARun.L3_SMSDetails()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="smaDetailsFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="smaDetailsFilerCheck" duration-ms="23004" started-at="2017-05-11T14:49:17Z" finished-at="2017-05-11T14:49:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smaDetailsFilerCheck -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="35" started-at="2017-05-11T14:49:40Z" finished-at="2017-05-11T14:49:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smaDetailsFilerCheck status=SUCCESS method=GARun.smaDetailsFilerCheck()[pri:0, instance:analyticsLive.GARun@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="quit()[pri:0, instance:analyticsLive.GARun@7ac7a4e4]" name="quit" is-config="true" duration-ms="6542" started-at="2017-05-11T14:49:40Z" finished-at="2017-05-11T14:49:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- analyticsLive.GARun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
